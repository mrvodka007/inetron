//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace iNetron.CLI.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("iNetron.CLI.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to iNetron v1.1 (C) mrvodka
        ///
        ///Usage:  [attack-type] [...]
        ///
        ///For help, use switch /?
        ///
        ///Types:
        ///	/dns	DNS Amplification Attack (Requires WinPcap)
        ///	
        ///	/loris	Slow Loris HTTP Attack
        ///	/srudy	Simplified &quot;Rudy&quot; HTTP Attack
        ///
        ///	/http	HTTP Flood Attack
        ///	/icmp	ICMP (Ping) Flood Attack
        ///	/tcp 	TCP Flood Attack
        ///	/udp 	UDP Flood Attack
        ///
        ///DNS Usage: [target-ip] [dns-ip] [ipv6]
        ///Example:
        ///	&quot;iNetron.CLI.exe /dns 127.0.0.1 10.0.0.1 no&quot;
        ///	&quot;iNetron.CLI.exe /dns ::1 ::1 yes&quot;
        ///
        ///
        ///LORIS Usage: [target-ip] [https] [port]
        ///E [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string inetron_usage {
            get {
                return ResourceManager.GetString("inetron_usage", resourceCulture);
            }
        }
    }
}
